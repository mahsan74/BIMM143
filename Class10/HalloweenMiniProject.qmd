---
title: "Class10-HalloweenMiniPoject"
author: "Mahsa Naeimi"
format: pdf
---

# 1. Importing Candy Data

```{r}
candy_file <- "candy-data.csv"
candy <- read.csv(candy_file, row.names = 1)
head(candy)

```

## What is in the dataset?

**Q1**. How many different candy types are in this dataset?

```{r}
num_candy_types <- nrow(candy)
```

85 types of candies

**Q2**. How many fruity candy types are in the dataset?

```{r}
fruity_candy_types = sum(candy$fruity)
fruity_candy_types 
```

## 2. What is your favorite candy?

We can find the `winpercent` value for favorite candy by using its name to access the corresponding row of the dataset.

```{r}
candy["Twix",]$winpercent
```

**Q3**. What is your favorite candy in the dataset and what is it's `winpercent` value?

```{r}
candy["Sugar Daddy",]$winpercent
```

**Q4**. What is the `winpercent` value for "Kit Kat"?

```{r}
candy["Kit Kat",]$winpercent
```

**Q5**. What is the `winpercent` value for "Tootsie Roll Snack Bars"?

```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```

Install `skimr` to get a quick overview of a given dataset"

```{r}
#install.packages("skimr")

#Now checking the candy data

library("skimr")
skim(candy)
```

**Q6**. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

`winpercent` seems to be in a different scale compared to other columns

**Q7**. What do you think a zero and one represent for the `candy$chocolate` column?

0 are candies that don't contain chocolate and 1 shows candies that contain choclate

**Q8**. Plot a histogram of `winpercent` values:

```{r}
hist(candy$winpercent)
```

**Q9**. Is the distribution of `winpercent` values symmetrical?

roughly symmetric, with longer right tail

**Q10**. Is the center of the distribution above or below 50%?

Center of the distribution is above 50%

#### We want to compare chocolate and fruity candy:

**Q11**. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
table(as.logical(candy$chocolate))
length(candy$chocolate)
```

```{r}
candy$winpercent[ as.logical(candy$chocolate)]
```

```{r}
# Chocolate Candies:
winpercent_chocolate <- candy$winpercent[as.logical(candy$chocolate) ]
mean (winpercent_chocolate)
```

```{r}
#Fruity Candies:
winpercent_fruit <- candy$winpercent[as.logical(candy$fruity)]
mean(winpercent_fruit)
```

### Statistical Test:

**Q12**. Is this difference statistically significant?

```{r}
t.test(winpercent_chocolate, winpercent_fruit)
```

An alternative way to look at the significance:

```{r}
boxplot(winpercent_chocolate, winpercent_fruit)
```

# 3. Overall Candy Rankings

**Q13**. What are the five least liked candy types in this set?

```{r}
head(candy[order(candy$winpercent), ], 5)
```

**Q14**. What are the top 5 all time favorite candy types out of this set?

```{r}
head(candy[order(-candy$winpercent), ], 5)
```

**Q15**. Make a first barplot of candy ranking based on `winpercent` values.

```{r}
library(ggplot2)

ggplot(candy, aes(y=row.names(candy), x=winpercent) )+
  geom_col(fill = "pink")
```

Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent ?  To order the data we can use `reorder`command:

```{r}
ggplot(candy) + aes(winpercent, reorder(rownames(candy), winpercent)) + 
  geom_col(fill = "pink")

```

To add color for better analyzing:

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) 
```

Now, for the first time, using this plot we can answer questions like:\

**Q17**. What is the worst ranked chocolate candy?

based on the graph, Sixlet is the worst ranked chocolate

\
**Q18**. What is the best ranked fruity candy?

based on the graph, Starburst is the best fruity

# 4. Taking a look at pricepercent

```{r}
#install.packages("ggrepel")
library(ggrepel)

# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 10)
```

**Q19**. Which candy type is the highest ranked in terms of `winpercent` for the least money - i.e. offers the most bang for your buck?

```{r}
candy_win_more_than_80 <- candy[candy$winpercent>80,] 
rownames(candy_win_more_than_80)[order(candy_win_more_than_80$pricepercent)]
```

**Q20**. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```

## 5. Exploring the Correlation Structure

To see see how the variables interact with one another we use `corrplot`:

```{r}
#install.packages("corrplot")
library(corrplot)

cij <- cor(candy)
corrplot(cij)
```

**Q22**. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

```{r}
library(corrplot) 
cij <- cor(candy) 
corrplot(cij, method = 'number')
```

Chocolate and fruity

**Q23**. Similarly, what two variables are most positively correlated?

Chocolate and `winpercent`

# 6. Principal Component Analysis

Let's apply PCA using the `prcom()` function to our candy dataset remembering to set the `scale=TRUE`argument

```{r}
pca <- prcomp(candy, scale = TRUE)
summary(pca)
```

```{r}
pca$rotation[,1]

```

```{r}
plot(pca$rotation[,1])
```

to change the plotting character and add some color:

```{r}
plot(pca$x[,1:2], col=my_cols, pch=16)
```

We can use ggplot as well:

```{r}
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)
p
```

We can add. labels to the plot :

```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

we can use `plotly` to have more interactive plot where we can see each data points information by leaving mousing over the point:

```{r}
#install.packages("plotly")
library(plotly)
# to get pdf, we have to comment ggplotly for p
#ggplotly(p)
```

To see correlation better :

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

 Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you? fruity, hard, and pluribus
